"""
Copyright 2022 Sony Semiconductor Solutions Corp. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
# automatically generated by the FlatBuffers compiler, do not modify

# namespace: SmartCamera

import flatbuffers


class BoundingBox2d(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsBoundingBox2d(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BoundingBox2d()
        x.Init(buf, n + offset)
        return x

    # BoundingBox2d
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BoundingBox2d
    def Left(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # BoundingBox2d
    def Top(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # BoundingBox2d
    def Right(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # BoundingBox2d
    def Bottom(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0


def BoundingBox2dStart(builder): builder.StartObject(4)
def BoundingBox2dAddLeft(builder, left): builder.PrependInt32Slot(0, left, 0)
def BoundingBox2dAddTop(builder, top): builder.PrependInt32Slot(1, top, 0)


def BoundingBox2dAddRight(
    builder, right): builder.PrependInt32Slot(2, right, 0)
def BoundingBox2dAddBottom(
    builder, bottom): builder.PrependInt32Slot(3, bottom, 0)


def BoundingBox2dEnd(builder): return builder.EndObject()
